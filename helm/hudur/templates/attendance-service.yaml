apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hudur.fullname" . }}-attendance
  labels:
    {{- include "hudur.labels" . | nindent 4 }}
    app.kubernetes.io/component: attendance
spec:
  replicas: {{ .Values.attendance.replicaCount }}
  selector:
    matchLabels:
      {{- include "hudur.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: attendance
  template:
    metadata:
      labels:
        {{- include "hudur.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: attendance
    spec:
      serviceAccountName: {{ include "hudur.serviceAccountName" . }}
      containers:
      - name: attendance
        image: "{{ .Values.attendance.image.repository }}:{{ .Values.attendance.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.attendance.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: https
          containerPort: 8443
          protocol: TCP
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: {{ .Values.global.environment }}
        - name: ASPNETCORE_URLS
          value: "https://+:8443;http://+:8080"
        - name: ConnectionStrings__DefaultConnection
          valueFrom:
            secretKeyRef:
              name: {{ include "hudur.fullname" . }}-secrets
              key: database-connection-string
        - name: Redis__ConnectionString
          valueFrom:
            secretKeyRef:
              name: {{ include "hudur.fullname" . }}-secrets
              key: redis-connection-string
        - name: GeofencingSettings__Enabled
          value: "{{ .Values.attendance.geofencing.enabled }}"
        - name: GeofencingSettings__DefaultRadius
          value: "{{ .Values.attendance.geofencing.defaultRadius }}"
        - name: BeaconSettings__Enabled
          value: "{{ .Values.attendance.beacon.enabled }}"
        - name: OfflineSettings__Enabled
          value: "{{ .Values.attendance.offline.enabled }}"
        - name: OfflineSettings__SyncInterval
          value: "{{ .Values.attendance.offline.syncInterval }}"
        - name: KioskSettings__Enabled
          value: "{{ .Values.attendance.kiosk.enabled }}"
        - name: AuthenticationService__BaseUrl
          value: "http://{{ include "hudur.fullname" . }}-authentication:{{ .Values.authentication.service.port }}"
        - name: FaceRecognitionService__BaseUrl
          value: "http://{{ include "hudur.fullname" . }}-facerecognition:{{ .Values.faceRecognition.service.port }}"
        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
        resources:
          {{- toYaml .Values.attendance.resources | nindent 10 }}
        volumeMounts:
        - name: certificates
          mountPath: /app/certificates
          readOnly: true
      volumes:
      - name: certificates
        secret:
          secretName: {{ include "hudur.fullname" . }}-tls-certs
      {{- with .Values.attendance.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.attendance.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.attendance.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "hudur.fullname" . }}-attendance
  labels:
    {{- include "hudur.labels" . | nindent 4 }}
    app.kubernetes.io/component: attendance
spec:
  type: {{ .Values.attendance.service.type }}
  ports:
  - port: {{ .Values.attendance.service.port }}
    targetPort: http
    protocol: TCP
    name: http
  - port: {{ .Values.attendance.service.httpsPort }}
    targetPort: https
    protocol: TCP
    name: https
  selector:
    {{- include "hudur.selectorLabels" . | nindent 4 }}
    app.kubernetes.io/component: attendance
---
{{- if .Values.attendance.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "hudur.fullname" . }}-attendance
  labels:
    {{- include "hudur.labels" . | nindent 4 }}
    app.kubernetes.io/component: attendance
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "hudur.fullname" . }}-attendance
  minReplicas: {{ .Values.attendance.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.attendance.autoscaling.maxReplicas }}
  metrics:
  {{- if .Values.attendance.autoscaling.targetCPUUtilizationPercentage }}
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: {{ .Values.attendance.autoscaling.targetCPUUtilizationPercentage }}
  {{- end }}
  {{- if .Values.attendance.autoscaling.targetMemoryUtilizationPercentage }}
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: {{ .Values.attendance.autoscaling.targetMemoryUtilizationPercentage }}
  {{- end }}
{{- end }}
