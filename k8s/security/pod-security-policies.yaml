apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: hudur-platform-psp
  labels:
    app.kubernetes.io/name: hudur-platform-psp
    app.kubernetes.io/part-of: hudur-platform
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'MustRunAsNonRoot'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
  seLinux:
    rule: 'RunAsAny'
---
apiVersion: policy/v1beta1
kind: PodSecurityPolicy
metadata:
  name: hudur-monitoring-psp
  labels:
    app.kubernetes.io/name: hudur-monitoring-psp
    app.kubernetes.io/part-of: hudur-platform
spec:
  privileged: false
  allowPrivilegeEscalation: false
  requiredDropCapabilities:
    - ALL
  volumes:
    - 'configMap'
    - 'emptyDir'
    - 'projected'
    - 'secret'
    - 'downwardAPI'
    - 'persistentVolumeClaim'
    - 'hostPath'
  hostNetwork: false
  hostIPC: false
  hostPID: false
  runAsUser:
    rule: 'RunAsAny'
  supplementalGroups:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  fsGroup:
    rule: 'MustRunAs'
    ranges:
      - min: 1
        max: 65535
  readOnlyRootFilesystem: false
  seLinux:
    rule: 'RunAsAny'
  allowedHostPaths:
    - pathPrefix: "/var/lib/docker/containers"
      readOnly: true
    - pathPrefix: "/var/log"
      readOnly: true
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hudur-platform-psp-user
  labels:
    app.kubernetes.io/name: hudur-platform-psp-user
    app.kubernetes.io/part-of: hudur-platform
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - hudur-platform-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: hudur-monitoring-psp-user
  labels:
    app.kubernetes.io/name: hudur-monitoring-psp-user
    app.kubernetes.io/part-of: hudur-platform
rules:
- apiGroups: ['policy']
  resources: ['podsecuritypolicies']
  verbs: ['use']
  resourceNames:
  - hudur-monitoring-psp
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hudur-platform-psp-binding
  labels:
    app.kubernetes.io/name: hudur-platform-psp-binding
    app.kubernetes.io/part-of: hudur-platform
roleRef:
  kind: ClusterRole
  name: hudur-platform-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: hudur-platform-sa
  namespace: hudur-platform
- kind: ServiceAccount
  name: default
  namespace: hudur-platform
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: hudur-monitoring-psp-binding
  labels:
    app.kubernetes.io/name: hudur-monitoring-psp-binding
    app.kubernetes.io/part-of: hudur-platform
roleRef:
  kind: ClusterRole
  name: hudur-monitoring-psp-user
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: ServiceAccount
  name: hudur-monitoring-sa
  namespace: hudur-monitoring
- kind: ServiceAccount
  name: default
  namespace: hudur-monitoring
