apiVersion: apps/v1
kind: Deployment
metadata:
  name: kibana
  namespace: hudur-system
  labels:
    app: kibana
    component: ui
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kibana
      component: ui
  template:
    metadata:
      labels:
        app: kibana
        component: ui
    spec:
      serviceAccountName: kibana
      containers:
      - name: kibana
        image: docker.elastic.co/kibana/kibana:8.11.0
        ports:
        - containerPort: 5601
          name: ui
        env:
        - name: ELASTICSEARCH_HOSTS
          value: "https://elasticsearch-client:9200"
        - name: ELASTICSEARCH_USERNAME
          value: "kibana_system"
        - name: ELASTICSEARCH_PASSWORD
          valueFrom:
            secretKeyRef:
              name: elasticsearch-secrets
              key: kibana-password
        - name: ELASTICSEARCH_SSL_VERIFICATIONMODE
          value: "none"
        - name: SERVER_HOST
          value: "0.0.0.0"
        - name: SERVER_PUBLICBASEURL
          value: "https://kibana.hudur.sa"
        - name: XPACK_SECURITY_ENABLED
          value: "true"
        - name: XPACK_ENCRYPTEDSAVEDOBJECTS_ENCRYPTIONKEY
          valueFrom:
            secretKeyRef:
              name: kibana-secrets
              key: encryption-key
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 120
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /api/status
            port: 5601
          initialDelaySeconds: 30
          periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: kibana
  namespace: hudur-system
  labels:
    app: kibana
    component: ui
spec:
  type: ClusterIP
  ports:
  - port: 5601
    targetPort: 5601
    name: ui
  selector:
    app: kibana
    component: ui
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kibana
  namespace: hudur-system
---
apiVersion: v1
kind: Secret
metadata:
  name: kibana-secrets
  namespace: hudur-system
type: Opaque
data:
  encryption-key: a2liYW5hZW5jcnlwdGlvbmtleTEyMzQ1Ng==  # kibanaencryptionkey123456 (base64)
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: kibana-ingress
  namespace: hudur-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: kibana-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - Kibana'
spec:
  tls:
  - hosts:
    - kibana.hudur.sa
    secretName: kibana-tls
  rules:
  - host: kibana.hudur.sa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: kibana
            port:
              number: 5601
