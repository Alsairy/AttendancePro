apiVersion: apps/v1
kind: Deployment
metadata:
  name: alertmanager
  namespace: hudur-system
  labels:
    app: alertmanager
    component: server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: alertmanager
      component: server
  template:
    metadata:
      labels:
        app: alertmanager
        component: server
    spec:
      serviceAccountName: alertmanager
      containers:
      - name: alertmanager
        image: prom/alertmanager:v0.26.0
        args:
          - '--config.file=/etc/alertmanager/alertmanager.yml'
          - '--storage.path=/alertmanager'
          - '--web.external-url=https://alertmanager.hudur.sa'
          - '--web.route-prefix=/'
        ports:
        - containerPort: 9093
          name: web
        volumeMounts:
        - name: alertmanager-config-volume
          mountPath: /etc/alertmanager
        - name: alertmanager-storage-volume
          mountPath: /alertmanager
        resources:
          requests:
            memory: "128Mi"
            cpu: "50m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          httpGet:
            path: /-/healthy
            port: 9093
          initialDelaySeconds: 30
          periodSeconds: 15
        readinessProbe:
          httpGet:
            path: /-/ready
            port: 9093
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: alertmanager-config-volume
        configMap:
          defaultMode: 420
          name: alertmanager-config
      - name: alertmanager-storage-volume
        persistentVolumeClaim:
          claimName: alertmanager-pvc
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: alertmanager-config
  namespace: hudur-system
data:
  alertmanager.yml: |
    global:
      smtp_smarthost: 'smtp.hudur.sa:587'
      smtp_from: 'alerts@hudur.sa'
      smtp_auth_username: 'alerts@hudur.sa'
      smtp_auth_password: '${SMTP_PASSWORD}'

    route:
      group_by: ['alertname', 'cluster', 'service']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'web.hook'
      routes:
        - match:
            severity: critical
          receiver: 'critical-alerts'
          group_wait: 5s
          repeat_interval: 5m
        - match:
            severity: warning
          receiver: 'warning-alerts'
          group_wait: 30s
          repeat_interval: 30m

    receivers:
      - name: 'web.hook'
        webhook_configs:
          - url: 'http://monitoring-service:80/api/monitoring/alerts/webhook'
            send_resolved: true

      - name: 'critical-alerts'
        email_configs:
          - to: 'admin@hudur.sa'
            subject: 'üö® CRITICAL: {{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
            body: |
              Alert: {{ .GroupLabels.alertname }}
              Service: {{ .GroupLabels.service }}
              Severity: {{ .CommonLabels.severity }}
              
              {{ range .Alerts }}
              Description: {{ .Annotations.description }}
              Summary: {{ .Annotations.summary }}
              Started: {{ .StartsAt }}
              {{ end }}
        slack_configs:
          - api_url: '${SLACK_WEBHOOK_URL}'
            channel: '#alerts-critical'
            title: 'üö® Critical Alert: {{ .GroupLabels.alertname }}'
            text: |
              Service: {{ .GroupLabels.service }}
              {{ range .Alerts }}{{ .Annotations.description }}{{ end }}

      - name: 'warning-alerts'
        email_configs:
          - to: 'ops@hudur.sa'
            subject: '‚ö†Ô∏è WARNING: {{ .GroupLabels.alertname }} - {{ .GroupLabels.service }}'
            body: |
              Alert: {{ .GroupLabels.alertname }}
              Service: {{ .GroupLabels.service }}
              Severity: {{ .CommonLabels.severity }}
              
              {{ range .Alerts }}
              Description: {{ .Annotations.description }}
              Summary: {{ .Annotations.summary }}
              Started: {{ .StartsAt }}
              {{ end }}

    inhibit_rules:
      - source_match:
          severity: 'critical'
        target_match:
          severity: 'warning'
        equal: ['alertname', 'service']
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: alertmanager-pvc
  namespace: hudur-system
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
  storageClassName: fast-ssd
---
apiVersion: v1
kind: Service
metadata:
  name: alertmanager
  namespace: hudur-system
  labels:
    app: alertmanager
    component: server
spec:
  type: ClusterIP
  ports:
  - port: 9093
    targetPort: 9093
    name: web
  selector:
    app: alertmanager
    component: server
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: alertmanager
  namespace: hudur-system
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: alertmanager-ingress
  namespace: hudur-system
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/rewrite-target: /
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/auth-type: basic
    nginx.ingress.kubernetes.io/auth-secret: alertmanager-auth
    nginx.ingress.kubernetes.io/auth-realm: 'Authentication Required - AlertManager'
spec:
  tls:
  - hosts:
    - alertmanager.hudur.sa
    secretName: alertmanager-tls
  rules:
  - host: alertmanager.hudur.sa
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: alertmanager
            port:
              number: 9093
