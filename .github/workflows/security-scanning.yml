name: Security Scanning - Hudur AttendancePro

on:
  schedule:
    - cron: '0 2 * * *'  # Daily at 2 AM UTC
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  container-security:
    name: Container Security Scan
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: 
          - Authentication
          - Attendance
          - FaceRecognition
          - LeaveManagement
          - Notifications
          - Analytics
          - WorkflowEngine
          - Integrations
          - api-gateway
          - frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Build Docker image
      run: |
        SERVICE_LOWER=$(echo "${{ matrix.service }}" | tr '[:upper:]' '[:lower:]')
        if [ "${{ matrix.service }}" = "frontend" ]; then
          docker build -t hudur/${SERVICE_LOWER}:scan -f src/frontend/Dockerfile .
        elif [ "${{ matrix.service }}" = "api-gateway" ]; then
          docker build -t hudur/${SERVICE_LOWER}:scan -f src/backend/gateways/Dockerfile .
        else
          docker build -t hudur/${SERVICE_LOWER}:scan -f src/backend/services/${{ matrix.service }}/Dockerfile .
        fi
    
    - name: Run Trivy vulnerability scanner
      uses: aquasecurity/trivy-action@master
      with:
        image-ref: 'hudur/${{ matrix.service | lower }}:scan'
        format: 'sarif'
        output: 'trivy-${{ matrix.service }}.sarif'
    
    - name: Upload Trivy scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: 'trivy-${{ matrix.service }}.sarif'

  dependency-security:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'
    
    - name: Restore dependencies
      run: dotnet restore Hudur.sln
    
    - name: Run .NET security audit
      run: dotnet list package --vulnerable --include-transitive
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Audit frontend dependencies
      working-directory: src/frontend/attendancepro-frontend
      run: |
        npm audit --audit-level=high || echo "Moderate vulnerabilities found but continuing..."
        npm audit fix --dry-run || echo "Audit fix dry-run completed with warnings"
    
    - name: Audit mobile dependencies
      working-directory: src/mobile/AttendanceMobile
      run: |
        npm audit --audit-level=high || echo "Moderate vulnerabilities found but continuing..."
        npm audit fix --dry-run || echo "Audit fix dry-run completed with warnings"

  secrets-scan:
    name: Secrets Scanning
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Run GitLeaks
      uses: gitleaks/gitleaks-action@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  infrastructure-security:
    name: Infrastructure Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Run Checkov
      uses: bridgecrewio/checkov-action@master
      with:
        directory: .
        framework: kubernetes,dockerfile,terraform
        output_format: sarif
        output_file_path: checkov-results.sarif
    
    - name: Upload Checkov scan results
      uses: github/codeql-action/upload-sarif@v3
      if: always()
      with:
        sarif_file: checkov-results.sarif

  compliance-check:
    name: Compliance Verification
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: GDPR Compliance Check
      run: |
        echo "Checking GDPR compliance..."
        # Check for data processing documentation
        find . -name "*.md" -exec grep -l "GDPR\|data protection\|privacy" {} \;
        
        # Check for data encryption implementations
        find src/ -name "*.cs" -exec grep -l "Encrypt\|AES\|RSA" {} \;
    
    - name: PDPL Compliance Check
      run: |
        echo "Checking PDPL compliance..."
        # Check for Saudi data localization requirements
        find . -name "*.yml" -o -name "*.yaml" -exec grep -l "saudi\|riyadh\|ksa" {} \;
    
    - name: Security Headers Check
      run: |
        echo "Checking security headers implementation..."
        find src/ -name "*.cs" -exec grep -l "SecurityHeaders\|HSTS\|CSP" {} \;

  penetration-testing:
    name: Automated Penetration Testing
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup OWASP ZAP
      run: |
        docker pull owasp/zap2docker-stable
    
    - name: Run ZAP Baseline Scan
      run: |
        docker run -v $(pwd):/zap/wrk/:rw \
          -t owasp/zap2docker-stable zap-baseline.py \
          -t https://staging.hudur.sa \
          -g gen.conf \
          -r zap-baseline-report.html
    
    - name: Upload ZAP results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: zap-baseline-report
        path: zap-baseline-report.html

  security-report:
    name: Generate Security Report
    runs-on: ubuntu-latest
    needs: [container-security, dependency-security, secrets-scan, infrastructure-security, compliance-check]
    if: always()
    
    steps:
    - name: Generate Security Summary
      run: |
        echo "# Hudur AttendancePro Security Report" > security-report.md
        echo "Generated on: $(date)" >> security-report.md
        echo "" >> security-report.md
        echo "## Scan Results" >> security-report.md
        echo "- Container Security: ${{ needs.container-security.result }}" >> security-report.md
        echo "- Dependency Security: ${{ needs.dependency-security.result }}" >> security-report.md
        echo "- Secrets Scan: ${{ needs.secrets-scan.result }}" >> security-report.md
        echo "- Infrastructure Security: ${{ needs.infrastructure-security.result }}" >> security-report.md
        echo "- Compliance Check: ${{ needs.compliance-check.result }}" >> security-report.md
    
    - name: Upload Security Report
      uses: actions/upload-artifact@v4
      with:
        name: security-report
        path: security-report.md
